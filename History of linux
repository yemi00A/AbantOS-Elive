
A Brief History of Linux
Unix is one of the most popular operating systems worldwide because of its large support base and distribution. It was originally developed as a multitasking system for minicomputers and mainframes in the mid-1970s. It has since grown to become one of the most widely used operating systems anywhere, despite it’s sometimes confusing interface and lack of central standardization.
The real reason for Unix’s popularity? Many hackers feel that Unix is the Right Thing—the One True Operating System. Hence, the development of Linux by an expanding group of Unix hackers who want to get their hands dirty with their own system.
Linux is a freely distributable version of Unix, originally developed by Linus Torvalds, who began work on Linux in 1991 as a student at the University of Helsinki in Finland. Linus now works for Transmeta Corporation, a start-up in Santa Clara, California, and continues to maintain the Linux kernel, that is, the lowest-level core component of the operating system.
Linus released the initial version of Linux for free on the Internet, inadvertently spawning one of the largest software-development phenomena of all time. Today, Linux is authored and maintained by a group of several thousand (if not more) developers loosely collaborating across the Internet. Companies have sprung up to provide Linux support, to package it into easy-to-install distributions, and to sell workstations pre-installed with the Linux software. 
INTRODUCTION AND HISTORY OF UNIX
Linux is an operating system for PC computers and workstations that now features a fully functional graphical user interface (GUI), just like Windows and the Mac (though more stable). Linux was developed in the early 1990s by Linus Torvalds, along with other programmers around the world. As an operating system, Linux performs many of the same functions as UNIX, Mac, Windows, and Windows NT. However, Linux is distinguished by its power and flexibility. Most PC operating systems, such as Windows, began their development within the confines of small, restricted personal computers, which have only recently become more versatile machines. Such operating systems are constantly being upgraded to keep up with the ever-changing capabilities of PC hardware. Linux, on the other hand, was developed in a different context. Linux is a PC version of the UNIX operating system that has been used for decades on mainframes and minicomputers, and is currently the system of choice for workstations. Linux brings the speed, efficiency, and flexibility of UNIX to your PC, taking advantage of all the capabilities that personal computers can now provide. Along with its UNIX capabilities come powerful networking features, including support for Internet, intranets, Windows, and Apple Talk networking. As a standard, Linux is distributed with fast, efficient, and stable Internet servers, such as the Web, FTP, and Gopher servers, along with domain name, proxy, news, mail, and indexing servers. In other words, Linux has everything you need to set up, support, and maintain a fully functional network. Now, with both Gnome and K Desktop, Linux also provides GUI interfaces with that same level of flexibility and power. Unlike Windows and the Mac, you can choose the interface you want and then customize it further, adding panels, applets, virtual desktops, and menus, all with full drag-and-drop capabilities and Internet-aware tools. On your desktop, a file manager window can access any Internet site, enabling you to display Web pages and download files with a few simple mouse operations. To print a file, simply drag it to a Printer icon. Linux does all this at a great price. Linux is free, including the network servers and GUI desktops. Unlike the official UNIX operating system, Linux is distributed freely under a GNU (General Public License) as specified by the Free Software Foundation, making it available to anyone who wants to use it. GNU stands for “Gnu’s Not UNIX” and is a project initiated and managed by the Free Software Foundation to provide free software to users, programmers, and developers. Linux is copyrighted, and it is not public domain. However, a GNU public license has much the same effect as being in the public domain.
The GNU public license is designed to ensure Linux remains free and, at the same time, standardized. Only one official Linux exists. Linux is technically the operating system kernel, the core operations. In addition Linux is commonly bundled with an extensive set of software available under the GNU public license, including environments, programming languages, Internet tools, and text editors. People sometimes have the mistaken impression that Linux is somehow less than a professional operating system because it is free. Linux is, in fact, a PC and workstation version of UNIX. Many consider it far more stable and much more powerful than Windows. This power and stability have made Linux an operating system of choice as a network server.
Thompson wrote the first version of the yet-unnamed operating system in assembly language for a DEC PDP-7 minicomputer. The name (written Unics at the beginning) was coined by Brian Kernighan as a pun on Multics
HISTORY OF UNIX
In 1969-1970, Kenneth Thompson, Dennis Ritchie, and others at AT&T Bell Labs began developing a small operating system on a little-used PDP-7. The operating system was soon christened Unix, a pun on an earlier operating system project called MULTICS. In 1972-1973 the system was rewritten in the programming language C, an unusual step that was visionary: due to this decision, Unix was the first widely-used operating system that could switch from and outlive its original hardware. Other innovations were added to Unix as well, in part due to synergies between Bell Labs and the academic community. In 1979, the “seventh edition” (V7) version of Unix was released, the grandfather of all extant Unix systems.
After this point, the history of Unix becomes somewhat convoluted. The academic community, led by Berkeley, developed a variant called the Berkeley Software Distribution (BSD), while AT&T continued developing Unix under the names “System III” and later “System V”. In the late 1980’s through early 1990’s the “wars” between these two major strains raged. After many years each variant adopted many of the key features of the other. Commercially, System V won the “standards wars” (getting most of its interfaces into the formal standards), and most hardware vendors switched to AT&T’s System V. However, System V ended up incorporating many BSD innovations, so the resulting system was more a merger of the two branches. The BSD branch did not die, but instead became widely used for research, for PC hardware, and for single-purpose servers (e.g., many web sites use a BSD derivative.
The result was many different versions of Unix, all based on the original seventh edition. Most versions of Unix were proprietary and maintained by their respective hardware vendor, for example, Sun Solaris is a variant of System V. Three versions of the BSD branch of Unix ended up as open source: FreeBSD (concentrating on ease-of-installation for PC-type hardware), NetBSD (concentrating on many different CPU archiIn .1984 Richard Stallman’s Free Software Foundation (FSF) began the GNU project, a project to create a free version of the Unix operating system. By free, Stallman meant software that could be freely used, read, modified, and redistributed. The FSF successfully built a vast number of useful components, including a C compiler (gcc), an impressive text editor (emacs), and a host of fundamental tools. However, in the 1990’s the FSF was having trouble developing the operating system kernel [FSF 1998]; without a kernel their dream of a completely free operating system would not be realized; features and a variant of NetBSD, OpenBSD (concentrating on security).
 In 1969, Ken Thompson, Dennis Ritchie, and the researchers at AT&T Bell Laboratories developed the UNIX operating system, incorporating many of the features of the MULTICS research project. They tailored the system for the needs of a research environment, designing it to run on minicomputers. From its inception, UNIX was an affordable and efficient multiuser and multitasking operating system. Thompson developed a compiler for a new high-level language he called B stripped-down version of the BCPL language.
 By April 1969, AT&T decided to withdraw Multics and go with GECOS. When Multics was withdrawn, Ken Thompson and Dennis Ritchie needed to rewrite an operating system to play space travel on another smaller machine (a DEC PDP-7 [Programmed Data Processor 4 K memory for user programs). The result was a system that a punning colleague called UNICS (UNiplexed Information and Computing Service)-an emasculated Multics'.
Since it began to escape from AT&T's Bell Laboratories in the early 1970's, the success of the UNIX operating system has led to many different versions: recipients of the (at that time free) UNIX system code all began developing their own different versions in their own, different, ways for use and sale. Universities, research institutes, government bodies and computer companies all began using the powerful UNIX system to develop many of the technologies which today are part of a UNIX system.
Computer aided design, manufacturing control systems, laboratory simulations, even the Internet itself, all began life with and because of UNIX systems. Today, without UNIX systems, the Internet would come to a screeching halt. Most telephone calls could not be made, electronic commerce would grind to a halt and there would have never been "Jurassic Park"!
By the late 1970's, a ripple effect had come into play. By now the under- and post-graduate students whose lab work had pioneered these new applications of technology were attaining management and decision-making positions inside the computer system suppliers and among its customers. And they wanted to continue using UNIX systems.
Soon all the large vendors, and many smaller ones, were marketing their own, diverging, versions of the UNIX system optimized for their own computer architectures and boasting many different strengths and features. Customers found that, although UNIX systems were available everywhere, they seldom could interwork or co-exist without significant investment of time and effort to make them work effectively. The trade mark UNIX was ubiquitous, but it was applied to a multitude of different, incompatible products.
In 1972 Dennis Ritchie created a new language called C; Inherited B's concise syntax  and added a powerful mix of high-level functionality and the low lever features required to program an operating system . “The Unix installations has grown to 10 with   more expected”.
 In 1973 most of the UNIX kernel was rewritten in C, easier to understand and modify. Easier to port to new platforms
The UNIX system became popular at Bell Labs as more and more researchers started using the system. In 1973, Dennis Ritchie collaborated with Ken Thompson to rewrite the programming code for the UNIX system in the C programming language. Dennis Ritchie, a fellow researcher at Bell Labs, developed the C programming language as a flexible tool for program development. One of the advantages of C is, it can directly access the hardware architecture of a computer with a generalized set of programming commands. Up until this time, an operating system had to be specially rewritten in a hardware-specific assembly language for each type of computer. The C programming language allowed Dennis Ritchie and Ken Thompson to write only one version of the UNIX operating system, which could then be compiled by C compilers on different computers. In effect, the UNIX operating system became transportable, able to run on a variety of different computers with little or no reprogramming. UNIX gradually grew from one person’s tailored design to a standard software product distributed by many different vendors, such as Novel and IBM. Initially, UNIX was treated as a research product. The first versions of UNIX were distributed free to the computer science departments of many noted universities. Throughout the 1970s, Bell Labs began issuing official versions of UNIX and licensing the systems to different users. One of these users was the Computer Science department of the University of California, Berkeley. Berkeley added many new features to the system that later became standard.
In 1975, Berkeley released its own version of UNIX, known by its distribution arm, Berkeley Software Distribution (BSD). This BSD version of UNIX became a major contender to the AT&T Bell Labs version. Other independently developed versions of UNIX sprouted up.
 In 1976-77, Thompson took a six-month sabbatical from Bell Labs to teach as a visiting professor at the University of California-Berkeley. When Thompson returned to Bell Labs, students and professors at Berkeley continued to enhance UNIX.
 In 1977 Bill Joy (a grad student at the time) puts together the first UNIX Berkeley Software Distribution (BSD). Joy also added a Pascal compiler, the C Shell, and a new text editor called VI.
 VI became the de facto standard Unix editor; vi was later added to the UNIX Specification, so every conforming system must have it
  In the early 1980's, the market for UNIX systems had grown enough to be noticed  by industry analysts and researchers. Now the question was no longer "What is a UNIX system?" but "Is a UNIX system suitable for business and commerce?"
Throughout the early and mid-1980's, the debate about the strengths and weaknesses of UNIX systems raged, often fueled by the utterances of the vendors themselves who sought to protect their profitable proprietary system sales by talking UNIX systems down. And, in an effort to further differentiate their competing UNIX system products, they kept developing and adding features of their own.
The rise of the Network
DARPA gave Berkeley a major contract to enhance Unix so that it would be suitable for its new network Joy had been instructed to plug Bolt, Beranek and Newman (BBN) TCP/IP stack into Berkeley Unix. He refused because, in his opinion, BBN's stack wasn't good enough. So, he wrote his own high-performance TCP/IP stack
BSD worked so well that DARPA chose it to be the preferred operating system for its Arpanet research nodes
 In 1982, Joy co-founded Sun Microsystems where he created NFS and helped designing the SPARC   microprocessor and the JAVA language
 In 1984, another factor brought added attention to UNIX systems. A group of vendors concerned about the continuing encroachment into their markets and control of system interfaces by the larger companies, developed the concept of "open systems."
Open systems were those that would meet agreed specifications or standards. This resulted in the formation of X/Open Company Ltd whose remit was, and today in the guise of The Open Group remains, to define a comprehensive open systems environment. Open systems, they declared, would save on costs, attract a wider portfolio of applications and competition on equal terms. X/Open chose the UNIX system as the platform for the basis of open systems.
Although UNIX was still owned by AT&T, the company did little commercially with it until the mid-1980's. Then the spotlight of X/Open showed clearly that a single, standard version of the UNIX system would be in the wider interests of the industry and its customers. The question now was, "which version?".
 In a move intended to unify the market in 1987, AT&T announced a pact with Sun Microsystems, the leading proponent of the Berkeley derived strain of UNIX. However, the rest of the industry viewed the development with considerable concern. Believing that their own markets were under threat they clubbed together to develop their own "new" open systems operating system. Their new organization was called the Open Software Foundation (OSF). In response to this, the AT&T/Sun faction formed UNIX International.
The ensuing "UNIX wars" divided the system vendors between these two camps clustered around the two dominant UNIX system technologies: AT&T's System V and the OSF system called OSF/1. In the meantime, X/Open Company held the center ground. It continued the process of standardizing the APIs necessary for an open operating system specification.
In addition, it looked at areas of the system beyond the operating system level where a standard approach would add value for supplier and customer alike, developing or adopting specifications for languages, database connectivity, networking and mainframe interworking. The results of this work were published in successive X/Open Portability Guides.
In September 1983, Richard Stallman launched a project to create a free Unix-like operating system called GNU (recursive acronym for “GNU's Not Unix”) 
In 1983, it released the first commercial version, called System 3. This was later followed by System V, which became a supported commercial software product. You can find more information on UNIX in UNIX: The Complete Reference, written by the UNIX experts at AT&T labs, Kenneth Rosen, Doug Host, James Farber, and Richard Rosinski. At the same time, the BSD version of UNIX was developing through several releases. In the late 1970s, BSD UNIX became the basis of a research project by the Department of Defense’s Advanced Research Projects Agency (DARPA). As a result, in 1983, Berkeley released a powerful version of UNIX called BSD release 4.2. This release included sophisticated file management as well as networking features based on TCP/IP network protocols-the same protocols now used for the Internet. BSD release 4.2 was widely distributed and adopted by many vendors, such as Sun Microsystems. The proliferation of different versions of UNIX led to a need for a UNIX standard. Software developers had no way of knowing on what versions of UNIX their programs would actually run. In the mid-1980s, two competing standards emerged, one based on the AT&T version of UNIX and the other based on the BSD version. In bookstores today, you can find many different books on UNIX for one or the other version. Some specify System V UNIX, while others focus on BSD UNIX. AT&T moved UNIX to a new organization, called UNIX System Laboratories, which could focus on developing a standard system, integrating the different major versions of UNIX)
The Free Software Foundation (FSF) was founded in 1985 to raise funds to help the GNU Project
  In 1989, the FSF published a new license called The GNU Public License (GPL).
 Stallman also contributed with many tools like The Emacs text editor,The GNU Compiler Collection (GCC) , The GNU Debugger (GDB) etc.

 Free as In Freedom
 The program's users must have four essential freedoms: 
1.The freedom to run the program, for any purpose. 2.The freedom to study how the program works, and change it to make it do what you wish (access to the source code is a precondition for this)
 3.The freedom to redistribute copies so you can help your neighbor ,4.The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits (access to the source code is a precondition for this).
 A program is Free Software if users have all of these freedoms. 
 By 1990, the GNU system had almost all the pieces except the most important one, the kernel.
In 1991 Linus Torvalds began developing an operating system kernel, which he named “Linux” [Torvalds 1999]. This kernel could be combined with the FSF material and other components (, some  of the BSD components and MIT’s X-windows software) to produce a freely-modifiable and very useful operating system. This book will term the kernel itself the “Linux kernel” and an entire combination as “Linux”. Note that many use the term “GNU/Linux” instead for this combination.
In the Linux community, different organizations have combined the available components differently. Each combination is called a “distribution”, and the organizations that develop distributions are called “distributors”. Common distributions include Red Hat, Mandrake, SuSE, Caldera, Corel, and Debian. There are differences between the various distributions, but all distributions are based on the same foundation: the Linux kernel and the GNU glibc libraries. Since both are covered by “copyleft” style licenses, changes to these foundations generally must be made available to all, a unifying force between the Linux distributions at their foundation that does not exist between the BSD and AT&T-derived Unix systems. This book is not specific to any Linux distribution; when it discusses Linux, it presumes Linux kernel version 2.2 or greater and the C library glibc 2.1 or greater, valid assumptions for essentially all current major Linux distributions
  In 1991, UNIX System Laboratories developed System V release 4, which incorporated almost all the features found in System V release 3, BSD release 4.3, Sun OS, and Xenix. In response to System V release 4, several other companies, such as IBM and Hewlett-Packard, established the Open Software Foundation (OSF) to create their own standard version of UNIX. Two commercial standard versions of UNIX existed then-the OSF version and System V release 4. At that time, students were making use of a program called Minix, which highlighted different UNIX features. Minix was created by Professor Andrew Tannebaum and widely distributed over the Internet to students around the world. Linus’s intention was to create an effective PC version of UNIX for Minix users. He called it Linux, and in 1991, Linus released version 0.11. Linux was widely distributed over the Internet and, in the following years, other programmers refined and added to it, incorporating most of the applications and features now found in standard UNIX systems. All the major window managers have been ported to Linux. Linux has all the Internet utilities, such as FTP file transfer support, Web browsers, and remote connections with PPP. It also has a full set of program development utilities, such as C++ compilers and debuggers. Given all its features, the Linux operating system remains small, stable, and fast. In its simplest format, Linux can run effectively on only 2MB of memory. Although Linux has developed in the free and open environment of the Internet, it adheres to official UNIX standards. Because of the proliferation of UNIX versions in the previous decades, the Institute of Electrical and Electronics Engineers (IEEE) developed an independent UNIX standard for the American National Standards Institute (ANSI). This new ANSI-standard UNIX is called the Portable Operating System Interface for Computer Environments (POSIX). The standard defines how a UNIX-like system needs to operate, specifying details such as system calls and interfaces. POSIX defines a universal standard to which all UNIX versions must adhere. Most popular versions of UNIX are now POSIX-compliant. 
In October 1992 XPG 4 was released. During this time, X/Open had put in place a brand program based on vendor guarantees and supported by testing. Since the publication of XPG4, X/Open has continued to broaden the scope of open systems specifications in line with market requirements. As the benefits of the X/Open brand became known and understood, many large organizations began using X/Open as the basis for system design and procurement. By 1993, over $7 billion had been spent on X/Open branded systems. By the start of 1997 that figure has risen to over $23 billion. To date, procurements referencing the Single UNIX Specification amount to over $5.2 billion
In 1993 Patrick Volkerding puts together the first Linux distribution (Slackware). In the same 1993, AT&T sold off its interest in UNIX to Novell. UNIX Systems Laboratories became part of Novell’s UNIX Systems Group. Novell issued its own versions of UNIX based on System V release 4, called Unix Ware, designed to interact with Novell’s Net-Ware system. UNIX Systems Laboratories is currently owned by the Santa Cruz Operation. With Solaris, Sun has introduced System V release 4 onto its Sun systems. Two competing GUI’s for UNIX, called Motif and Open Look, have been superseded by a new desktop standard called the Common Desktop Environment (CDE), which has since been incorporated into Open Motif, an open source version of Motif also for use on Linux. Throughout much of its development, UNIX remained a large and demanding operating system requiring a workstation or minicomputer to be effective. Several versions of UNIX were designed primarily for the workstation environment. Sun-OS was developed for Sun workstations and AIX was designed for IBM workstations. As personal computers became more powerful, however, efforts were made to develop a PC version of UNIX.  Xenix and System V/386 are commercial versions of UNIX designed for IBM-compatible PCs. AUX is a UNIX version that runs on the Macintosh. A testament to UNIX’s inherent portability is that it can be found on almost any type of computer: workstations, minicomputers, and even supercomputers. This inherent portability made possible an effective PC version of UNIX. Linux was originally designed specifically for Intel-based personal computers. Linux started out as a personal project of a computer science student named Linus Torvalds at the University of Helsinki. At that time, students were making use of a program called Minix, which highlighted different UNIX features. Minix was created by Professor Andrew Tannebaum and widely distributed over the Internet to students around the world. Linus’s intention was to create an effective PC version of UNIX for Minix user.  
In 1994 the Linux kernel ver. 1.0 is released.
In 1995 X/Open introduced the UNIX 95 brand for computer systems guaranteed to meet the Single UNIX Specification. The Single UNIX Specification brand program has now achieved critical mass: vendors whose products have met the demanding criteria now account for the majority of UNIX systems by value.
For over twenty years, since the inception of X/Open, UNIX had been closely linked with open systems. X/Open, now The Open Group, continues to develop and evolve the Single UNIX Specification and associated brand program on behalf of the IT community. The freeing of the specification of the interfaces from the technology is allowing many systems to support the UNIX philosophy of small, often simple tools, that can be combined in many ways to perform often complex tasks. The stability of the core interfaces preserves existing investment, and is allowing development of a rich set of software tools. The Open Source movement is building on this stable foundation and is creating a resurgence of enthusiasm for the UNIX philosophy. In many ways Open Source can be seen as the true delivery of Open Systems that will ensure it continues to go from strength to strength.
 ( 1997 Single UNIX Specification, Version 2: The Open Group introduces Version 2 of the Single UNIX Specification, including support for real time, threads and 64-bit and larger processors. The specification is made freely available on the web. IRIX 6.4, AIX 4.3 and HP-UX 11 ship.
1998 UNIX 98: The Open Group introduces the UNIX 98 family of brands, including Base, Workstation and Server. First UNIX 98 registered products shipped by Sun, IBM and NCR. The Open Source movement starts to take off with announcements from Netscape and IBM. UnixWare 7 and IRIX 6.5 ship.
1999 UNIX at 30: The UNIX system reaches its 30th anniversary. Linux 2.2 kernel released. The Open Group and the IEEE commence joint development of a revision to POSIX and the Single UNIX Specification. First Linux World conferences. Dot com fever on the stock markets. Tru64 UNIX ships.
2001 Single UNIX Specification, Version 3: Version 3 of the Single UNIX Specification unites IEEE POSIX, The Open Group and the industry efforts. Linux 2.4 kernel released. 
Increased interest in software that is freely shared has made it increasingly necessary to define and explain it. A widely used term is “open source software”, which is further defined in [OSI 1999]. Eric Raymond [1997, 1998] wrote several seminal articles examining its various development processes. Another widely-used term is “free software”, where the “free” is short for “freedom”: the usual explanation is “free speech, not free beer.” Neither phrase is perfect. The term “free software” is often confused with programs whose executables are given away at no charge, but whose source code cannot be viewed, modified, or redistributed. Conversely, the term “open source” is sometime (ab)used to mean software whose source code is visible, but for which there are limitations on use, modification, or redistribution. This book uses the term “open source” for its usual meaning, that is, software which has its source code freely available for use, viewing, modification, and redistribution; a more detailed definition is contained in the  Open Source Definition. In some cases, a difference in motive is suggested; those preferring the term “free software” wish to strongly emphasize the need for freedom, while those using the term may have other motives (e.g., higher reliability) or simply wish to appear less strident. 
2003 ISO/IEC 9945:2003: The core volumes of Version 3 of the Single UNIX Specification are approved as an international standard. The "Westwood" test suite ship for the UNIX 03 brand. Solaris 9.0 E ships. Linux 2.6 kernel released
2007:Apple Mac OS X certified to UNIX 03.

2008 ISO/IEC 9945:2008Latest revision of the UNIX API set formally standardized at ISO/IEC, IEEE and The Open Group. Adds further APIs
2009 UNIX at 40: IDC on UNIX market -- says UNIX $69 billion in 2008, predicts UNIX $74 billion in 2013
2010 UNIX on the Desktop: Apple reports 50 million desktops and growing -- these are Certified UNIX systems
3 SUMMARY
Linux is free, including the network servers and GUI desktops. Unlike the official UNIX operating system, Linux is distributed freely under a GNU (General Public License) as specified by the Free Software Foundation, making it available to anyone who wants to use it. GNU stands for “Gnu’s Not UNIX” and is a project initiated and managed by the Free Software Foundation to provide free software to users, programmers, and developers. Linux is copyrighted, and it is not public domain. However, a GNU public license has much the same effect as being in the public domain. The GNU public license is designed to ensure Linux remains free and, at the same time, standardized. Only one official Linux exists. Linux is technically the operating system kernel, the core operations. In addition, Linux is commonly bundled with an extensive set of software available under the GNU public license, including environments, program

    Works Cited
Brian, Stuart L. "Principles of operating systems." 15 Apr. 2009, p. 23.
Dennis, Ritchie M. "The Evolution of the Unix Time-sharing System." AT&T Bell Laboratories Technical Journal, [Howitt, Doran], 18 Nov. 1984, p. 63.
Marshall, McKusick K. ""Twenty Years of Berkeley Unix – From AT&T-Owned to Freely Redistributable." 18 Aug. 1999.
